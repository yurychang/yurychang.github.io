{"version":3,"file":"component---src-templates-blog-post-js-7e1c56b9f6af2518e7a6.js","mappings":"iKAsDA,IA3CY,WAAO,IAAD,EAkBVA,EAAM,WAjBCC,EAAAA,EAAAA,gBAAe,cAiBRC,KAAKC,oBAAb,aAAG,EAAwBH,OAEvC,OACE,uBAAKI,UAAU,QACb,gBAAC,EAAAC,EAAD,CACED,UAAU,sCACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,qBACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,OACP,yBACE,8BAASb,EAAOa,MAChB,2BACA,wBAAMT,UAAU,YAAWJ,MAAAA,OAAA,EAAAA,EAAQc,UAAW,U,kFC0BxD,UAlEyB,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKb,KAAKC,oBAAV,eAAwBiB,QAAxB,QACVC,EAAmBN,EAAnBM,SAAUC,EAASP,EAATO,KAElB,OACE,gBAAC,IAAD,CAAQN,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAD,CACEC,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,2BACErB,UAAU,YACVsB,WAAS,EACTC,SAAS,6BAET,0BAAQvB,UAAU,QAChB,sBAAIA,UAAU,OAAOwB,SAAS,YAC3BX,EAAKM,YAAYH,OAEpB,qBAAGhB,UAAU,yBAAyBa,EAAKM,YAAYM,OAEzD,2BACEzB,UAAU,OACV0B,wBAAyB,CAAEC,OAAQd,EAAKe,MACxCJ,SAAS,gBAEX,2BACA,0BAAQxB,UAAU,QAChB,gBAAC,IAAD,QAGJ,uBAAKA,UAAU,QACb,sBACE6B,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGjB,GACC,gBAAC,EAAAkB,KAAD,CACEnC,UAAU,kEACVoC,GAAInB,EAASoB,OAAOC,KACpBC,IAAI,QAHN,KAKKtB,EAASE,YAAYH,QAI9B,0BACGE,GACC,gBAAC,EAAAiB,KAAD,CAAMC,GAAIlB,EAAKmB,OAAOC,KAAMC,IAAI,QAC7BrB,EAAKC,YAAYH,MADpB,Y","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n\r\n  return (\r\n    <div className=\"flex\">\r\n      <StaticImage\r\n        className=\"mb-0 mr-4 min-w-[50px] rounded-full\"\r\n        layout=\"fixed\"\r\n        formats={[\"auto\", \"webp\", \"avif\"]}\r\n        src=\"../images/logo.png\"\r\n        width={50}\r\n        height={50}\r\n        quality={95}\r\n        alt=\"Profile picture\"\r\n      />\r\n      {author?.name && (\r\n        <p>\r\n          <strong>{author.name}</strong>\r\n          <br />\r\n          <span className=\"text-sm\">{author?.summary || null}</span>\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogPostTemplate = ({ data, location }) => {\r\n  const post = data.markdownRemark\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const { previous, next } = data\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header className=\"mb-5\">\r\n          <h1 className=\"mb-2\" itemProp=\"headline\">\r\n            {post.frontmatter.title}\r\n          </h1>\r\n          <p className=\"text-sm text-gray-500\">{post.frontmatter.date}</p>\r\n        </header>\r\n        <section\r\n          className=\"mb-7\"\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n        <hr />\r\n        <footer className=\"my-4\">\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n      <nav className=\"py-4\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link\r\n                className=\"text-gray-500 transition-colors duration-75 hover:text-blue-600\"\r\n                to={previous.fields.slug}\r\n                rel=\"prev\"\r\n              >\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["author","useStaticQuery","site","siteMetadata","className","S","layout","formats","src","width","height","quality","alt","name","summary","data","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}