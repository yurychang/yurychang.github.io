{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/posts/trouble-with-nbsp-space/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Programming Life","siteUrl":"https://blog.yury-chang.com"}},"markdownRemark":{"id":"e964559f-867a-5a0d-a3f2-8ab59f200c60","excerpt":"最近自己做了一個打字效果，用著用著沒發現什問題，直到有一次把套用了效果的中文句子換成英文，卻赫然發現文字不會換行，像火車一樣直直的衝破螢幕去了。 當下第一反應是 CSS 忘記設定文字段行了，檢查  …正常，再加上  …沒用！而且 MDN 上還寫到  deprecated…","html":"<p>最近自己做了一個打字效果，用著用著沒發現什問題，直到有一次把套用了效果的中文句子換成英文，卻赫然發現文字不會換行，像火車一樣直直的衝破螢幕去了。</p>\n<p>當下第一反應是 CSS 忘記設定文字段行了，檢查 <code class=\"language-text\">white-space</code> …正常，再加上 <code class=\"language-text\">word-break: break-word;</code> …沒用！而且 MDN 上還寫到 <code class=\"language-text\">break-word</code> deprecated 😂。</p>\n<p>當下心一橫，蠻幹也好，我就是要換行！搜尋了一下發現有 <code class=\"language-text\">overflow-wrap: break-word;</code>，加上後果然可以換行了！但也直接斷在了英文單字中間拉。</p>\n<p>冷靜下來重新檢查了一下 CSS 文字換行的相關屬性，推測並不是 CSS 的問題。這時元凶已經指向了我自己寫的打字效果。</p>\n<p>打字效果的作法是用 JS 取出元素內的字串並分解為字元，再一個個填回原本的元素中，營造出打字的感覺。有什麼跟換行有關的東西嗎？Dev tool 上一個地方立刻吸引了我的注意。</p>\n<p>為了避免空白被合併，句子中所有的空白都被轉換成 <code class=\"language-text\">&amp;nbsp;</code> 了。</p>\n<p>趕緊查了一下 <code class=\"language-text\">&amp;nbsp;</code> 的資料，<strong>原來 <code class=\"language-text\">&amp;nbsp;</code> 除了可以代替空白，同時還有阻止文字換行的效果阿！nbsp 就是 non-breaking-space 的縮寫。</strong></p>\n<p><em>難怪 GSAP text plugin 要把空白轉換做成選項，原來是有這一層原因阿。</em></p>\n<h2>參考資料：</h2>\n<p><a href=\"https://www.w3schools.com/html/html_entities.asp\">HTML Entities</a><br>\n<a href=\"http://hklifenote.blogspot.com/2014/12/blog-post.html\">&#x26;#32 與&#x26;nbsp，換行空格與不換行空格</a><br>\n<a href=\"https://pymaster.tw/posts/448998-weekend-long-knowledge-no-wrap-blanks/\">週末長知識: 不換行空格</a><br>\n<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/overflow-wrap\">overflow-wrap - CSS（层叠样式表） | MDN</a></p>","frontmatter":{"title":"空白? 被 &nbsp; 雷到的經驗","date":"February 02, 2022","description":null}},"previous":{"fields":{"slug":"/posts/my-first-vscode-extension/"},"frontmatter":{"title":"My First VSCode Extension"}},"next":{"fields":{"slug":"/posts/understand-JavaScript-async/"},"frontmatter":{"title":"理解 JavaScript 非同步機制的運作"}}},"pageContext":{"id":"e964559f-867a-5a0d-a3f2-8ab59f200c60","previousPostId":"bfdbc026-2a08-50f1-9b3c-008b771dbe0a","nextPostId":"38f85b14-22cb-5c7b-92e4-6d2bd1a8d377"}},
    "staticQueryHashes": ["3000541721","3257411868"]}